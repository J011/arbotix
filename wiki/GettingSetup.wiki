#summary how to set stuff up

This page details software and hardware setup. We need a few pieces of software to get the most out of the ArbotiX:
 * *Arduino Software* - the IDE for creating code for our controller. 
 * *ArbotiX Distribution* - we'll also need to install some files to use the ArbotiX with the Arduino IDE.
 * *!PyPose* - A simple pose and capture program for the ArbotiX.

= Arduino Software Setup =
{{{
Arduino is an open-source electronics prototyping platform based on flexible, easy-to-use hardware and software. -- arduino.cc
}}}
The ArbotiX software is based on the [http://www.sanguino.cc Sanguino], the big brother of the [http://www.arduino.cc Arduino]. The first thing we need to do is to install the Arduino software:
 # Install the Arduino framework: follow the instructions at http://arduino.cc/en/Guide/HomePage

= ArbotiX Software Setup =
To use the ArbotiX with the Arduino IDE we need to add some files to our Arduino folder. Download the latest _ArbotiX-Software_ release from the front page (or download from SVN), extract the zip file, and copy the following files:
 # The _cores/arbotix_ folder needs to go into _arduino-0017/hardware/cores/arbotix_
 # The _bootloaders/atmega644p_ folder needs to go into _arduino-0017/hardware/bootloaders/atmega644p_
 # All the folders in _libraries_ need to be copied into _arduino-0017/hardware/libraries_
 # Append the contents of _boards.txt_ from the distribution onto the end of _arduino-0017/hardware/boards.txt_ file to include the ArbotiX definitions.
 # You may also want to copy the folders in _sketches_, especially _pypose, into your sketchbook

Restart the Arduino IDE, from the *Tools -> Board* menu, select *ArbotiX* board. 

= !PyPose Setup =
!PyPose is a pose and capture program, written in Python using wxPython. We of course will have to install Python, wxPython, !PySerial to access serial ports, and then !PyPose itself.
 # Download and install Python 2.5: http://www.python.org/download/releases/2.5.4/
 # Download and install wxPython: http://www.wxpython.org/download.php
 # Download and install !PySerial: http://sourceforge.net/projects/pyserial/files/
 # Put the PyPose software in an easy to use location

If using Ubuntu, you can install items 1-3 of the above with: _sudo apt-get install python python-serial  python-wxgtk2.8_.

= Connecting Power, Etc =
Please see the downloadable ArbotiX manual for instructions and guidance in connecting external devices and power to the board. 

= Downloading Code =
There are two ways to download code onto the arbotiX: either with an FTDI cable or an In-System Programmer, although there are a number of different versions of each available:
 * *The FTDI breakout board* available from [http://www.sparkfun.com/commerce/product_info.php?products_id=9115 Sparkfun] will work with the Arduino environment out of the box. 
 * *[http://search.digikey.com/scripts/DkSearch/dksus.dll?Detail&name=768-1028-ND The FTDI Cable]* can be used with the Arduino environment, getting the auto-reset to work is a slight pain. The cable uses RTS rather than DTR for the reset signal. Here's how to fix it under Linux/MAC: http://www.arduino.cc/playground/Hacking/FTDIAutoReset
 * *To use an ISP* such as the [http://www.ladyada.net/make/usbtinyisp/ USBTinyISP] you will have to adjust a few parameters, as Arduino uploads using the bootloader by default: http://www.arduino.cc/en/Hacking/Programmer 

_Note: An FTDI cable should not be connected at the same time as an XBEE radio is in the board. Always remove the XBEE radio before connecting an FTDI cable_

= Wireless Downloading =
With a bootloader on the ArbotiX, you can do wireless downloading. The arbotiX bootloader runs at a 38400 baud rate, so your XBEE radios need to be set to 38400 for wireless downloading. You'll also have to manually push the RESET button. A tutorial on getting around the reset button push is here: http://www.ladyada.net/make/xbee/arduino.html 

_Note: wireless bootloading may be dangerous, if you experience RF-interference something may go wrong. We do not recommend doing this unless you have an ISP to restore the bootloader._



<font color="#FF0000">
Old Instructions...
 # Download and copy the Sanguino framework into your Arduino folder, following the instructions included with the Sanguino framework: http://sanguino.cc/useit
 # Lastly, we need to install the arbotiX libraries, and patch the Sanguino installation, since the default serial handling is not fast enough for our bioloid bus. You can download the libraries from the Downloads tab (or via SVN for bleeding edge source) then:
    # copy all files from _sanguino-patch/_ into _arduino/hardware/cores/sanguino/_ 
    # put all the directories found in _libraries_ in _arduino/hardware/libraries/_
</font>